var FestivalMode,bind=function(fn,me){return function(){return fn.apply(me,arguments)}},extend=function(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key]}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor;child.__super__=parent.prototype;return child},hasProp={}.hasOwnProperty;FestivalMode=function(superClass){extend(FestivalMode,superClass);function FestivalMode(){this.hasPopupAccess=bind(this.hasPopupAccess,this);this.checkForContactAccessApproval=bind(this.checkForContactAccessApproval,this);return FestivalMode.__super__.constructor.apply(this,arguments)}FestivalMode.prototype.events=[["mousedown","[data-change-view]","triggerViewChange"],["change",".activator input:checkbox","toggleActivationState"],["mousedown",".authentication-views form","openAuthenticationForm"]];FestivalMode.prototype.ui={$mainRegion:".main-region",$mapLayer:".map-layer",$mapListToggle:".map-list-toggle",$map:'[data-view="map"]',$activationCheckbox:"#activator-checkbox",$header:"> header",$mapFooter:".map-footer"};FestivalMode.prototype.init=function($el){this.$el=$el;this.user={hasContactAccess:false};this.session={hasBeenOnline:false,isAuthenticated:false};this.bindView();return this.loadApp()};FestivalMode.prototype.loadApp=function(){this.setupPopups();this.ui.$activationCheckbox.prop("checked",true);return this.$el.fadeIn(500,function(_this){return function(){return setTimeout(function(){return _this.checkAuthentication()},1500)}}(this))};FestivalMode.prototype.checkAuthentication=function(){if(this.session.isAuthenticated){return this.setAsAlreadyAuthenticated()}else{return this.loadView("unauth-welcome")}};FestivalMode.prototype.setAsAlreadyAuthenticated=function(){this.changeAppState("authenticated");this.updateViewOnValidAuthentication();return this.loadView("friends-list")};FestivalMode.prototype.openAuthenticationForm=function($trigger){$trigger.addClass("active");return this.changeStatus(this.ui.$header,"displaying-auth-form")};FestivalMode.prototype.setFirstTimeAuthentication=function(){this.session.isAuthenticated=true;this.updateViewOnValidAuthentication();return this.popupView.loadPopup("invite-friends")};FestivalMode.prototype.updateViewOnValidAuthentication=function(){setTimeout(function(_this){return function(){return _this.ui.$activationCheckbox.prop("checked",false)}}(this),100);return setTimeout(function(_this){return function(){return _this.initializeMap()}}(this),1e3)};FestivalMode.prototype.onAfterLoadView=function(newView){if(newView==="map"||newView==="friends-list"){return this.$el.attr("data-active-base-view",newView)}};FestivalMode.prototype.onAfterAppStateChange=function(stateChange){if(!this.session.isAuthenticated){return this.setFirstTimeAuthentication()}};FestivalMode.prototype.toggleActivationState=function($input){var isActive,newAppState,newView;isActive=$input.is(":checked");this.checkIfFirstTimeOnline(isActive);newAppState=isActive?"active":"authenticated";newView=isActive?"map":"friends-list";this.changeAppState(newAppState);return this.loadView(newView)};FestivalMode.prototype.checkIfFirstTimeOnline=function(isActive){if(isActive){if(!this.session.hasBeenOnline){return setTimeout(function(_this){return function(){return _this.setFirstTimeOnline()}}(this),800)}}else{return this.popupView.hidePopup()}};FestivalMode.prototype.setFirstTimeOnline=function(){this.popupView.loadPopup("plan-updates");return this.session.hasBeenOnline=true};FestivalMode.prototype.setupPopups=function(){return this.popupView=new FM_PopupManagerView(this.$el,{onBeforePopupTrigger:this.checkForContactAccessApproval,hasPopupAccess:this.hasPopupAccess})};FestivalMode.prototype.checkForContactAccessApproval=function($trigger){if($trigger.hasClass("permit-contact-access")){return this.user.hasContactAccess=true}};FestivalMode.prototype.hasPopupAccess=function(popup){var hasAccess;hasAccess=true;if(popup==="invite-friends"&&!this.user.hasContactAccess){hasAccess=false;this.popupView.loadPopup("request-contact-access",800)}return hasAccess};FestivalMode.prototype.initializeMap=function(){var offset;offset=200;return this.ui.$mapLayer.css({width:this.ui.$mainRegion.width()+offset*2+"px",height:this.ui.$mainRegion.height()+offset*2+"px",top:offset*-1+"px",left:offset*-1+"px"})};return FestivalMode}(BaseView);new FestivalMode($("#festival-mode"));